{"version":3,"sources":["/Users/berchet/Code/angular/dist/packages-dist/core/bundles/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","TypeDecorator","cls","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","undefined","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","annotations","Optional","SkipSelf","Self","Inject","formatError","text","obj","charAt","substr","context","parts","JSON","replace","NEW_LINE","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","slice","reverse","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","source","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","destroyPlatform","destroy","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","optionsReducer","dst","objs","reduce","__assign","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","state","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","nodeIndex","eventName","event","componentView","handleEvent","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","outputIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","template","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","moduleDef","providersByKey","initNgModule","_def","provDef","NOT_CREATED$1","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","depDefs","createProviderInstance","NOT_CREATED","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","elIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","__proto__","assign","s","n","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","major","split","minor","patch","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_console","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","DashCase","Renderer2","NgModuleFactoryLoader","_results","filter","find","toArray","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","listeners","providerTokens","attributes","classes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","begin","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","_ngModuleDefFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearProviderOverrides","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","keyframes","transition","ɵx","ɵy","ɵbc","ɵz","ɵbb","ɵba","ɵbd","ɵw","ɵk","ɵl","ɵm","ɵf","ɵg","ɵh","ɵi","ɵj","ɵb","ɵc","ɵd","ɵe","ɵn","ɵp","ɵo","ɵs","ɵq","ɵr","ɵa","ɵt","ɵu"],"mappings":"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","file":"/Users/berchet/Code/angular/dist/packages-dist/core/bundles/core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via\n       * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n       * attribute to all selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-rc.0');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.index), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).index);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.index).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.index).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).index).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).index + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).index + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.index, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.index);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOT_CREATED$1 = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        providers[i] = provDef.flags & 4096 /* LazyProvider */ ? NOT_CREATED$1 :\n            _createProviderInstance$1(data, provDef);\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === NOT_CREATED$1) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== NOT_CREATED$1) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).index;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs.end) {\n            fs.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.index);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.index).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.index).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return def.flags & 4096 /* LazyProvider */ ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).index, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    var /** @type {?} */ injectable;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = /** @type {?} */ ((providerDef)).value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.index).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.index).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.index).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.index);\n                        if (providerData.instance === NOT_CREATED) {\n                            providerData.instance = _createProviderInstance(view, providerDef_1);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.index).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).index).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.index + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ provider = asProviderData(view, index).instance;\n    if (provider === NOT_CREATED) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.index + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.index) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.index, elementDef.index + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).index).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        var /** @type {?} */ value = void 0;\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                value = asElementData(view, nodeDef.index).renderElement;\n                break;\n            case 0 /* ElementRef */:\n                value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n                break;\n            case 2 /* TemplateRef */:\n                value = asElementData(view, nodeDef.index).template;\n                break;\n            case 3 /* ViewContainerRef */:\n                value = asElementData(view, nodeDef.index).viewContainer;\n                break;\n            case 4 /* Provider */:\n                value = asProviderData(view, nodeDef.index).instance;\n                break;\n        }\n        return value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, new Array(argCount));\n}\n/**\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.index = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.index + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return /** @type {?} */ ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.index + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n        if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.index + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).index).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).index).componentView;\n                    initView(compView, instance, instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 16384 /* TypeDirective */:\n            changed =\n                checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            changed =\n                checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n            break;\n        case 16384 /* TypeDirective */:\n            changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            break;\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            break;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.index), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.index);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).index);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                // Make all providers lazy, so that we don't get into trouble\n                // with ordering problems of providers on the same element\n                nodeDef.flags |= 4096 /* LazyProvider */;\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function hasOverrrides(def) {\n        return def.providers.some(function (node) {\n            return !!(node.flags & 3840 /* CatProviderNoDirective */) && providerOverrides.has(node.token);\n        });\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            // Make all providers lazy, so that we don't get into trouble\n            // with ordering problems of providers on the same element\n            provider.flags |= 4096 /* LazyProvider */;\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.index).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.index;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.index;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).index);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n    initServicesIfNeeded();\n    return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Injectable = Injectable;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearProviderOverrides = clearProviderOverrides;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵx = animate$1;\nexports.ɵy = group$1;\nexports.ɵbc = keyframes$1;\nexports.ɵz = sequence$1;\nexports.ɵbb = state$1;\nexports.ɵba = style$1;\nexports.ɵbd = transition$1;\nexports.ɵw = trigger$1;\nexports.ɵk = _iterableDiffersFactory;\nexports.ɵl = _keyValueDiffersFactory;\nexports.ɵm = _localeFactory;\nexports.ɵf = _appIdRandomProviderFactory;\nexports.ɵg = defaultIterableDiffers;\nexports.ɵh = defaultKeyValueDiffers;\nexports.ɵi = DefaultIterableDifferFactory;\nexports.ɵj = DefaultKeyValueDifferFactory;\nexports.ɵb = StaticInjector;\nexports.ɵc = ReflectiveInjector_;\nexports.ɵd = ReflectiveDependency;\nexports.ɵe = resolveReflectiveProviders;\nexports.ɵn = wtfEnabled;\nexports.ɵp = createScope;\nexports.ɵo = detectWTF;\nexports.ɵs = endTimeRange;\nexports.ɵq = leave;\nexports.ɵr = startTimeRange;\nexports.ɵa = makeParamDecorator;\nexports.ɵt = _def;\nexports.ɵu = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}